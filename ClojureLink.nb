(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     66198,       1937]
NotebookOptionsPosition[     56379,       1589]
NotebookOutlinePosition[     56942,       1609]
CellTagsIndexPosition[     56899,       1606]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ClojureLink", "Title",
 CellChangeTimes->{{3.493337113058062*^9, 3.493337115496512*^9}, {
   3.496126710196507*^9, 3.496126739978006*^9}, 3.496979563805235*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.495732544177979*^9, 3.495732544812942*^9}}],

Cell[CellGroupData[{

Cell["todo", "Section",
 CellChangeTimes->{{3.4961265509141693`*^9, 3.496126551479752*^9}}],

Cell["-B, -Q", "Subsection",
 CellChangeTimes->{{3.4971951618225803`*^9, 3.497195172148801*^9}}],

Cell[" ===,  =!=", "Subsection",
 CellChangeTimes->{{3.496868039302744*^9, 3.496868054965682*^9}, {
  3.497195130541628*^9, 3.497195139253358*^9}}],

Cell["JLink object reference interop", "Subsection",
 CellChangeTimes->{{3.4968770925369587`*^9, 3.49687709528724*^9}, {
  3.497195145391046*^9, 3.49719515030868*^9}}],

Cell["Function[]", "Subsection",
 CellChangeTimes->{{3.496868082151024*^9, 3.496868083340473*^9}, {
  3.497195430389078*^9, 3.497195430556333*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Syntax Replacements and shorthands", "Section",
 CellChangeTimes->{{3.495667159352298*^9, 3.495667163742783*^9}, {
  3.495848535861155*^9, 3.495848539401943*^9}, {3.496117666287477*^9, 
  3.496117669862949*^9}, {3.496117823188933*^9, 3.496117826034465*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"syntaxreplacements", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<-\>\"", "\[Rule]", "\"\<\[Dash]\>\""}], ",", 
     RowBox[{"\"\<_\>\"", "\[Rule]", "\"\<\[LongDash]\>\""}], ",", 
     RowBox[{"\"\<:\>\"", "\[Rule]", "\"\<\[EmptyVerySmallSquare]\>\""}], ",", 
     RowBox[{"\"\<.\>\"", "->", "\"\<\[FilledVerySmallSquare]\>\""}], ",", 
     RowBox[{"\"\<!\>\"", "\[Rule]", "\"\<\[Dash]B\>\""}], ",", 
     RowBox[{"\"\<?\>\"", "\[Rule]", "\"\<\[Dash]Q\>\""}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4961177373595333`*^9, 3.496117763598937*^9}, {
  3.497195348240378*^9, 3.497195382280792*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"List", "@@@", "syntaxreplacements"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.497195385992249*^9, 3.497195394527587*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"-\"\>", "\<\"\[Dash]\"\>"},
    {"\<\"_\"\>", "\<\"\[LongDash]\"\>"},
    {"\<\":\"\>", "\<\"\[EmptyVerySmallSquare]\"\>"},
    {"\<\".\"\>", "\<\"\[FilledVerySmallSquare]\"\>"},
    {"\<\"!\"\>", "\<\"\[Dash]B\"\>"},
    {"\<\"?\"\>", "\<\"\[Dash]Q\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.4971953892164383`*^9, 3.497195394754209*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["input replacements", "Subsection",
 CellChangeTimes->{{3.4971954091028643`*^9, 3.497195414092758*^9}}],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
   RowBox[{"InputAutoReplacements", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<--\>\"", "\[Rule]", "\"\<\[Dash]\>\""}], ",", 
      RowBox[{"\"\<-=\>\"", "\[Rule]", "\"\<\[LongDash]\>\""}], ",", 
      RowBox[{"\"\<''\>\"", "\[Rule]", "\"\<\[EmptyVerySmallSquare]\>\""}], 
      ",", 
      RowBox[{"\"\<\\\\\>\"", "\[Rule]", "\"\<\[FilledVerySmallSquare]\>\""}],
       ",", 
      RowBox[{"\"\<``\>\"", "\[Rule]", "\"\<ClojureEvaluate\>\""}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.495769064522809*^9, 3.495769102593883*^9}, {
  3.496117969923867*^9, 3.49611797107413*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["syntax coloring", "Subsection",
 CellChangeTimes->{{3.497195416700324*^9, 3.497195419628203*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "defn", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<LocalVariables\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Solve\>\"", ",", 
       RowBox[{"{", "2", "}"}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.495848700329957*^9, 3.495848706984392*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "let", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<LocalVariables\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Solve\>\"", ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4958487186397533`*^9, 3.4958487209672327`*^9}, {
  3.4961269269695463`*^9, 3.496126927207101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "fn", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<LocalVariables\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Solve\>\"", ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.495848765159552*^9, 3.4958487753723183`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SyntaxInformation", "[", "#", "]"}], "=", 
      RowBox[{"{", "}"}]}], ")"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "cond", ",", "reduce", ",", "reverse", ",", "map", ",", "conj", ",", 
     "quote", ",", "length", ",", "range", ",", "list", ",", "count", ",", 
     "true", ",", "false", ",", "symbol"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.495848828684285*^9, 3.495848869746502*^9}, 
   3.495848900667644*^9, {3.495849056429481*^9, 3.495849070907282*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4958489651154327`*^9, 3.495848981479938*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["jvm init", "Section",
 CellChangeTimes->{{3.496281283516733*^9, 3.4962812845302267`*^9}}],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.4854000671095343`*^9, 3.4854000702408943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.4968878171845818`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.497195185898426*^9, 3.4971952209622517`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.484717070031927*^9, 3.484717071110776*^9}, {
  3.4971948479838543`*^9, 3.497194852795698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReinstallJava", "[", 
  RowBox[{
   RowBox[{
   "CommandLine", " ", "->", " ", "\"\</Library/Java/Home/bin/java\>\""}], 
   ",", 
   RowBox[{
   "JVMArguments", "\[Rule]", 
    "\"\<-Xmx1000m -Xms1000m -Djava.library.path=/usr/local/lib/ -classpath \
\\\"/Work/library/clojure-1.2.0/clojure.jar:/Work/library/clojure-1.2.0/\
clojure-contrib-1.2.0.jar:/Applications/Mathematica.app/SystemFiles/Links/\
JLink/JLink.jar\\\"\>\""}]}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.485401239900482*^9, {3.492988950386812*^9, 3.49298895400863*^9}, 
   3.493331009165187*^9, {3.495733099911687*^9, 3.4957331091238413`*^9}}],

Cell[BoxData[
 RowBox[{"LinkObject", "[", 
  RowBox[{"\<\"/Library/Java/Home/bin/java -classpath \
\\\"/Applications/Mathematica.app/SystemFiles/Links/JLink/JLink.jar\\\" \
-Xmx1000m -Xms1000m -Djava.library.path=/usr/local/lib/ -classpath \
\\\"/Work/library/clojure-1.2.0/clojure.jar:/Work/library/clojure-1.2.0/\
clojure-contrib-1.2.0.jar:/Applications/Mathematica.app/SystemFiles/Links/\
JLink/JLink.jar\\\" -Xdock:name=J/Link \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \\\"/tmp/m000002402131\\\"\"\>", ",", "7", 
   ",", "4"}], "]"}]], "Output",
 CellChangeTimes->{3.497195187356954*^9, 3.4971952179995613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadJavaClass", "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<clojure.lang.Compiler\>\"", ",", "\"\<clojure.lang.RT\>\"", ",", 
    "\"\<java.io.StringReader\>\""}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4854001064276752`*^9, 3.4854001431656313`*^9}, {
  3.497063991397936*^9, 3.497064002972004*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"JavaClass", "[", 
     RowBox[{"clojure", ".", "lang", ".", "Compiler"}], ",", "<>", "]"}],
    JLink`JavaClass["clojure.lang.Compiler", 0, {
      JLink`JVM["vm2"]}, 1, "clojure`lang`Compiler`", False, True]], ",", 
   InterpretationBox[
    RowBox[{"JavaClass", "[", 
     RowBox[{"clojure", ".", "lang", ".", "RT"}], ",", "<>", "]"}],
    JLink`JavaClass["clojure.lang.RT", 2, {
      JLink`JVM["vm2"]}, 1, "clojure`lang`RT`", False, True]], ",", 
   InterpretationBox[
    RowBox[{"JavaClass", "[", 
     RowBox[{"java", ".", "io", ".", "StringReader"}], ",", "<>", "]"}],
    JLink`JavaClass["java.io.StringReader", 3, {
      JLink`JVM["vm2"]}, 4, "java`io`StringReader`", False, True]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.497195218475243*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["bootstrap", "Section",
 CellChangeTimes->{{3.493227300489627*^9, 3.493227320231126*^9}, {
  3.496281298492337*^9, 3.496281315201311*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"load", "[", "str_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"Compiler`load", "[", 
    RowBox[{"JavaNew", "[", 
     RowBox[{
     "\"\<java.io.StringReader\>\"", ",", "\[IndentingNewLine]", "str"}], 
     "]"}], "]"}], ")"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4932298369125338`*^9, 3.493229854823203*^9}, {
   3.493230396440235*^9, 3.4932304127269793`*^9}, {3.493248546252997*^9, 
   3.493248574930735*^9}, {3.495749097701249*^9, 3.4957491031409807`*^9}, 
   3.4957494413798733`*^9, 3.495760551165016*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"load", "[", "\"\<(ns user) (defn part [a b] (.part a b))\>\"", 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4932304166708927`*^9, 3.4932304204801064`*^9}, {
   3.495749139307804*^9, 3.495749139611063*^9}, {3.49574918569753*^9, 
   3.495749188928425*^9}, {3.495749353909079*^9, 3.495749390570462*^9}, {
   3.49575004897501*^9, 3.4957500497330847`*^9}, {3.495750622064053*^9, 
   3.495750622798066*^9}, {3.4957509152691393`*^9, 3.4957509203461323`*^9}, {
   3.495751490857374*^9, 3.495751498256009*^9}, {3.495752860148953*^9, 
   3.495752864822075*^9}, 3.4961182630750027`*^9, 3.497063971388597*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"clojure", ".", "lang", ".", "Var"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject7532545906311169]], "Output",
 CellChangeTimes->{3.497195187637663*^9, 3.497195219461566*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"load", "[", "\"\<(ns user) (defn head [a] (.head a))\>\"", "]"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4932304166708927`*^9, 3.4932304204801064`*^9}, {
   3.4932306708955507`*^9, 3.493230694132972*^9}, {3.4957491460993767`*^9, 
   3.495749146241448*^9}, {3.495752856374736*^9, 3.4957528584925013`*^9}, 
   3.496118265824832*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "load", "[", "\"\<(ns user) (defn length [a] (.length a))\>\"", "]"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4932304166708927`*^9, 3.4932304204801064`*^9}, {
   3.4932306708955507`*^9, 3.4932307138363867`*^9}, 3.496118268063856*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"a", "\[NotEqual]", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.497195047551771*^9, 3.497195053609014*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Unequal", "[", 
    RowBox[{"a", ",", "b"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.497195053980625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"load", "[", 
  "\"\<(ns user) (use '[clojure.contrib.string :only [replace-str]]) (defn \
to-clojure-symbol [expr] \n\t\t\t\t(let [sname (.asString expr)] \n\t\t\t\t\t\
(cond \n\t\t\t\t\t\t(= sname \\\"True\\\") true\n\t\t\t\t\t\t(= sname \
\\\"False\\\") false\n\t\t\t\t\t\t(= sname \\\"Null\\\") nil\n\t\t\t\t\t\t(= \
sname \\\"nil\\\") nil\n\t\t\t\t\t\t(= sname \\\"Equal\\\") '=\n\t\t\t\t\t\t\
(= sname \\\"SameQ\\\") '=\n\t\t\t\t\t\t(= sname \\\"Plus\\\") '+\n\t\t\t\t\t\
\t(= sname \\\"Times\\\") '*\n\t\t\t\t\t\t(= sname \\\"Division\\\") '/\n\t\t\
\t\t\t\t(= sname \\\"Rational\\\") '/\n\t\t\t\t\t\t(= sname \\\"Greater\\\") \
'>\n\t\t\t\t\t\t(= sname \\\"GreaterEqual\\\") '>=\n\t\t\t\t\t\t(= sname \
\\\"Less\\\") '<\n\t\t\t\t\t\t(= sname \\\"LessEqual\\\") '<=\n\t\t\t\t\t\t(= \
sname \\\"Unequal\\\") 'not=\n\t\t\t\t\t\t(= (subs sname 0 1) \\\"\
\[EmptyVerySmallSquare]\\\") (keyword (replace-str \\\"\[LongDash]\\\" \
\\\"_\\\" (replace-str \\\"\[Dash]\\\" \\\"-\\\" (subs sname 1 (count \
sname)))))\n\t\t\t\t\t\ttrue (symbol (replace-str \\\"\[LongDash]\\\" \\\"_\\\
\" (replace-str \\\"\[Dash]\\\" \\\"-\\\" (replace-str \\\"\
\[FilledVerySmallSquare]\\\" \\\".\\\" sname))))\n\t\t\t\t\t)\n\t))\n\>\"", 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.495733875792152*^9, 3.4957338798359947`*^9}, {
   3.49573392315854*^9, 3.495733941604785*^9}, {3.495734015429888*^9, 
   3.495734022500812*^9}, {3.4957348984085627`*^9, 3.495734964956884*^9}, {
   3.4957350124959383`*^9, 3.4957350233575573`*^9}, {3.495735353186084*^9, 
   3.495735381066581*^9}, 3.495735475674008*^9, {3.4957357545057297`*^9, 
   3.4957357559673862`*^9}, {3.495761682807233*^9, 3.4957617089476337`*^9}, 
   3.495767723494789*^9, {3.4968653360606737`*^9, 3.496865344172119*^9}, {
   3.4968654814652033`*^9, 3.4968654822317123`*^9}, {3.49686692915506*^9, 
   3.496866933643504*^9}, {3.496867029535782*^9, 3.496867040504099*^9}, {
   3.496869406044011*^9, 3.496869460417294*^9}, {3.496869575168253*^9, 
   3.496869575686261*^9}, {3.496869691036083*^9, 3.496869700372403*^9}, {
   3.4968704503533297`*^9, 3.4968704540936747`*^9}, {3.496875952424254*^9, 
   3.496875956174981*^9}, {3.496889010223419*^9, 3.4968890339551363`*^9}, {
   3.497192549892188*^9, 3.49719256845162*^9}, {3.497192666444419*^9, 
   3.497192775677277*^9}, {3.4971932444034452`*^9, 3.497193257673801*^9}, {
   3.497195060119111*^9, 3.497195070291978*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"clojure", ".", "lang", ".", "Var"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject5770282673373185]], "Output",
 CellChangeTimes->{3.497195072819868*^9, 3.4971951878121223`*^9, 
  3.497195220026915*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"load", "[", 
  "\"\<(ns user) (use '[clojure.contrib.string :only [replace-str]]) (defn \
to-s-expression [expr] \n\t(let [conpart (fn [seq expr p] (conj seq \
(to-s-expression (part expr p))))] \n\t(cond\t\n\t\t(and (.atomQ expr) (not \
(.rationalQ expr))) \n\t\t\t(cond \n\t\t\t\t(.symbolQ expr) \
(to-clojure-symbol expr)\n\t\t\t\t(.integerQ expr) (.asInt expr)\n\t\t\t\t\
(.realQ expr) (.asDouble expr)\n\t\t\t\t(.stringQ expr) (.asString expr))\n\t\
\t(= (.asString (head expr)) \\\"List\\\") (reduce #(conpart %1 expr (+ %2 \
1)) [] (range (length expr)))\n\t\t(= (.asString (head expr)) \
\\\"HashMap\\\") (into {} (reduce #(conpart %1 expr (+ %2 1)) [] (range \
(length expr))))\n\t\t(= (.asString (head expr)) \\\"HashSet\\\") (into #{} \
(reduce #(conpart %1 expr (+ %2 1)) [] (range (length expr))))\n\t\t(= \
(.asString (head expr)) \\\"ClojureSymbol\\\") (symbol (.asString (part expr \
1)))\n\t\ttrue (reverse (reduce #(conpart %1 expr (+ %2 1)) (conj '() \
(to-s-expression (head expr))) (range (length expr))))\n\t)))\>\"", 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.493338427338983*^9, 3.493338463088605*^9}, {
   3.493338497589376*^9, 3.493338534024156*^9}, {3.493955035128046*^9, 
   3.49395510205793*^9}, {3.493955171417171*^9, 3.493955215065133*^9}, {
   3.494000766731098*^9, 3.494000772465212*^9}, {3.494000816145732*^9, 
   3.494000828999955*^9}, {3.4940409504562674`*^9, 3.494040967647255*^9}, {
   3.4940409990044413`*^9, 3.4940410483059053`*^9}, {3.494041996228116*^9, 
   3.4940419998282537`*^9}, 3.4957317027154207`*^9, {3.4957320071514883`*^9, 
   3.495732039215901*^9}, 3.4957320823499117`*^9, {3.4957332187707043`*^9, 
   3.495733239161975*^9}, {3.495733977601774*^9, 3.495733987734037*^9}, {
   3.495849372775024*^9, 3.495849409638783*^9}, {3.496865319297949*^9, 
   3.496865324917736*^9}, 3.496865517539341*^9, {3.496865615534753*^9, 
   3.4968656291611443`*^9}, {3.496867610435104*^9, 3.4968676183372393`*^9}, {
   3.496867882116043*^9, 3.496867910157148*^9}, {3.496869761800592*^9, 
   3.49686976514435*^9}, {3.496869876650869*^9, 3.4968698854267797`*^9}, {
   3.496876371726033*^9, 3.4968763841460047`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"clojure", ".", "lang", ".", "Var"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject5870535850328065]], "Output",
 CellChangeTimes->{3.4971951879050694`*^9, 3.497195220250987*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["eval", "Subsection",
 CellChangeTimes->{{3.494042519173768*^9, 3.494042523131402*^9}, {
  3.496118377563806*^9, 3.496118378034465*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"load", "[", 
  "\"\<(ns user) (defn evalm [expr] (binding [*ns* (create-ns 'user)] (eval \
expr)))\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.493250420308277*^9, 3.493250448662367*^9}, {
  3.493250675489093*^9, 3.4932506891747704`*^9}, {3.4933332121611977`*^9, 
  3.493333263320011*^9}, {3.496118337191896*^9, 3.4961183430378838`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"clojure", ".", "lang", ".", "Var"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject4170403010314241]], "Output",
 CellChangeTimes->{3.497195188005519*^9, 3.4971952203370743`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeClojureExpression", "[", "x_", "]"}], ":=", 
  RowBox[{"ReturnAsJavaObject", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"RT`var", "[", 
      RowBox[{"\"\<user\>\"", ",", "\"\<to-s-expression\>\""}], "]"}], ")"}], 
    "@", 
    RowBox[{"invoke", "[", 
     RowBox[{"MakeJavaExpr", "@", 
      RowBox[{"(", 
       RowBox[{"x", "/.", " ", 
        RowBox[{
         RowBox[{"Times", "[", 
          RowBox[{"a_", ",", 
           RowBox[{"Power", "[", 
            RowBox[{"b_", ",", 
             RowBox[{"-", "1"}]}], "]"}]}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Division", "[", 
          RowBox[{"a", ",", "b"}], "]"}]}]}], ")"}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4961184550774603`*^9, 3.496118477986053*^9}, {
   3.496118512867618*^9, 3.496118513729003*^9}, {3.496118556507658*^9, 
   3.496118557728718*^9}, 3.496865631646215*^9, {3.496869717594556*^9, 
   3.496869720086919*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClojureEvaluate", "[", "x_", "]"}], "/;", 
   RowBox[{"JavaObjectQ", "[", "x", "]"}]}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"RT`var", "[", 
     RowBox[{"\"\<user\>\"", ",", "\"\<evalm\>\""}], "]"}], ")"}], "@", 
   RowBox[{"invoke", "[", "x", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.49611840865383*^9, 3.4961184200279217`*^9}, {
  3.496281390044663*^9, 3.4962813946530533`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClojureEvaluate", "[", "x_", "]"}], ":=", 
  RowBox[{"ClojureEvaluate", "[", 
   RowBox[{"MakeClojureExpression", "[", 
    RowBox[{"createExpr", "@", "x"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4961184266461287`*^9, 3.4961184359595823`*^9}, {
   3.496118470747137*^9, 3.496118488120967*^9}, {3.4961186854599113`*^9, 
   3.496118695437914*^9}, 3.496119128527627*^9, {3.4962814527368917`*^9, 
   3.4962814767935667`*^9}}],

Cell["\<\
createExpr -> if encounter a java object, return the java object
what happens when you have a java object inside of an expression?\
\>", "Text",
 CellChangeTimes->{{3.496118748522105*^9, 3.496118803413908*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["clojure to Mathematica", "Subsection",
 CellChangeTimes->{{3.493336620337014*^9, 3.493336631160695*^9}, {
  3.495815269973318*^9, 3.4958152728742237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"load", "[", 
  "\"\<(ns user) (use '[clojure.contrib.string :only [replace-str]]) (defn \
to-mathematica-symbol [expr] \n\t\t\t\t(let [sname  (replace-str \\\"_\\\" \\\
\"\[LongDash]\\\" (replace-str \\\"-\\\" \\\"\[Dash]\\\" (replace-str \\\":\\\
\" \\\"\[EmptyVerySmallSquare]\\\" (replace-str \\\".\\\" \\\"\
\[FilledVerySmallSquare]\\\" (str expr)))))] \n\t\t\t\t\t(cond\n\t\t\t\t\t\t\
(= sname \\\"+\\\") (com.wolfram.jlink.Expr. 4 \\\"Plus\\\") \n\t\t\t\t\t\t(= \
sname \\\">\\\") (com.wolfram.jlink.Expr. 4 \\\"Greater\\\")\n\t\t\t\t\t\t(= \
sname \\\">=\\\") (com.wolfram.jlink.Expr. 4 \\\"GreaterEqual\\\")\n\t\t\t\t\t\
\t(= sname \\\"<\\\")  (com.wolfram.jlink.Expr. 4 \\\"Less\\\")\n\t\t\t\t\t\t\
(= sname \\\"<=\\\") (com.wolfram.jlink.Expr. 4 \\\"LessEqual\\\")\n\t\t\t\t\t\
\t(= sname \\\"=\\\") (com.wolfram.jlink.Expr. 4 \\\"Equal\\\")\n\t\t\t\t\t\t\
(= sname \\\"not=\\\") (com.wolfram.jlink.Expr. 4 \\\"Unequal\\\")\n\t\t\t\t\t\
\t(empty? (re-matches \
#\\\"(\\\\w|\[LongDash]|\[Dash]|\[FilledVerySmallSquare]|\
\[EmptyVerySmallSquare]|\\\\$)*\\\" sname)) (com.wolfram.jlink.Expr. \
(com.wolfram.jlink.Expr.  4 \\\"ClojureSymbol\\\") (into-array \
com.wolfram.jlink.Expr [(com.wolfram.jlink.Expr. sname)]))\n\t\t\t\t\t\ttrue \
(com.wolfram.jlink.Expr. 4 sname)\n\t\t\t\t\t)\n\t))\n    \n\>\"", 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.495733875792152*^9, 3.4957338798359947`*^9}, {
   3.49573392315854*^9, 3.495733941604785*^9}, {3.495734015429888*^9, 
   3.495734022500812*^9}, {3.4957348984085627`*^9, 3.495734964956884*^9}, {
   3.4957350124959383`*^9, 3.4957350233575573`*^9}, {3.495735353186084*^9, 
   3.495735381066581*^9}, 3.495735475674008*^9, {3.4957357545057297`*^9, 
   3.4957357559673862`*^9}, {3.495761682807233*^9, 3.4957617089476337`*^9}, 
   3.495767723494789*^9, {3.4968653360606737`*^9, 3.496865344172119*^9}, {
   3.4968654814652033`*^9, 3.4968654822317123`*^9}, {3.49686692915506*^9, 
   3.496866933643504*^9}, {3.496867029535782*^9, 3.496867040504099*^9}, {
   3.496869406044011*^9, 3.496869460417294*^9}, {3.496869575168253*^9, 
   3.496869575686261*^9}, {3.496869691036083*^9, 3.496869700372403*^9}, {
   3.4968704503533297`*^9, 3.4968704540936747`*^9}, {3.496875952424254*^9, 
   3.496875956174981*^9}, {3.496889010223419*^9, 3.4968890339551363`*^9}, {
   3.497066440063512*^9, 3.497066441182922*^9}, {3.4970665063926687`*^9, 
   3.497066619011755*^9}, {3.4970666814688396`*^9, 3.497066715241235*^9}, {
   3.497066756611649*^9, 3.4970667831839533`*^9}, {3.497066817949943*^9, 
   3.497066852015616*^9}, {3.497066891914747*^9, 3.4970669537096777`*^9}, {
   3.497067378230595*^9, 3.497067415977499*^9}, 3.497067529029765*^9, {
   3.497067663071042*^9, 3.497067666679981*^9}, {3.497067802116261*^9, 
   3.497067803659547*^9}, {3.497068341705739*^9, 3.497068390386335*^9}, {
   3.4971928224727077`*^9, 3.4971929364812107`*^9}, {3.497194743535763*^9, 
   3.497194749886162*^9}, {3.4971950794870234`*^9, 3.497195086159966*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"clojure", ".", "lang", ".", "Var"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject19194003710803969]], "Output",
 CellChangeTimes->{3.497195086587345*^9, 3.4971951883605757`*^9, 
  3.497195220680316*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"load", "[", 
  "\"\<(ns user)(use '[clojure.contrib.string :only [replace-str]]) (defn \
createExpr [struct] \n\t\t\t\t\t(cond\n\t\t\t\t\t\t(= struct true) \
(com.wolfram.jlink.Expr. 4 \\\"True\\\")\n\t\t\t\t\t\t(= struct false) \
(com.wolfram.jlink.Expr. 4 \\\"False\\\")\n\t\t\t\t\t\t(= struct nil) \
(com.wolfram.jlink.Expr. 4 \\\"NotNull\\\")\n\t\t\t\t\t\t(ratio? struct) \
(com.wolfram.jlink.Expr. (com.wolfram.jlink.Expr.  4 \\\"Rational\\\") \
(into-array com.wolfram.jlink.Expr (map createExpr [(numerator struct) \
(denominator struct)])))\n\t\t\t\t\t\t(keyword? struct) \
(to-mathematica-symbol struct)\n\t\t\t\t\t\t(symbol? struct) \
(to-mathematica-symbol struct)\n\t\t\t\t\t\t(integer? struct) \
(com.wolfram.jlink.Expr.  1 (str struct))\n\t\t\t\t\t\t(float? struct) \
(com.wolfram.jlink.Expr.  2 (str struct))\n\t\t\t\t\t\t(string? struct) \
(com.wolfram.jlink.Expr. struct)\n\t\t\t\t\t\t(list? struct) \
(com.wolfram.jlink.Expr. (createExpr (first struct)) (into-array \
com.wolfram.jlink.Expr (map createExpr (rest struct))))\n\t\t\t\t\t\t(vector? \
struct) (com.wolfram.jlink.Expr. (com.wolfram.jlink.Expr.  4 \\\"List\\\") \
(into-array com.wolfram.jlink.Expr (map createExpr struct)))\n\t\t\t\t\t\t\
(map? struct) (com.wolfram.jlink.Expr. (com.wolfram.jlink.Expr.  4 \
\\\"HashMap\\\") (into-array com.wolfram.jlink.Expr (map createExpr struct)))\
\n\t\t\t\t\t\t(set? struct) (com.wolfram.jlink.Expr. (com.wolfram.jlink.Expr. \
 4 \\\"HashSet\\\") (into-array com.wolfram.jlink.Expr (map createExpr \
struct)))\n\t\t\t\t\t\t(seq? struct) (com.wolfram.jlink.Expr. \
(com.wolfram.jlink.Expr.  4 \\\"List\\\") (into-array com.wolfram.jlink.Expr \
(map createExpr struct)))\n\t\t\t\t\t\ttrue struct\n\t\t\t\t\t)\t\n\t\t)\>\"",
   "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.493956499841691*^9, 3.4939565182883244`*^9}, {
   3.49395704744669*^9, 3.4939571636269217`*^9}, {3.493957291720249*^9, 
   3.493957291876646*^9}, {3.493957367477838*^9, 3.4939573701776123`*^9}, {
   3.493957463978313*^9, 3.493957504869803*^9}, {3.493957625291389*^9, 
   3.4939576818402853`*^9}, 3.493958518514991*^9, {3.493958721710506*^9, 
   3.493958726235889*^9}, {3.494035772707862*^9, 3.4940358087305107`*^9}, 
   3.49403584985161*^9, 3.4940358921040363`*^9, {3.4940360139838467`*^9, 
   3.494036060667453*^9}, {3.494036909226943*^9, 3.494036910497738*^9}, {
   3.494042612392861*^9, 3.494042617223134*^9}, {3.4957322977109537`*^9, 
   3.495732299156562*^9}, {3.495732420301096*^9, 3.495732465218338*^9}, {
   3.4957333741025753`*^9, 3.4957333757494373`*^9}, {3.495735052673353*^9, 
   3.495735071722838*^9}, 3.495735110530452*^9, {3.4957354887255487`*^9, 
   3.4957355085070047`*^9}, {3.495767742948627*^9, 3.4957677456272984`*^9}, {
   3.495815376279069*^9, 3.495815405277567*^9}, {3.4968664081088552`*^9, 
   3.496866443178302*^9}, {3.496866718313936*^9, 3.496866749333467*^9}, {
   3.496866791771791*^9, 3.496866832890437*^9}, {3.496866956357244*^9, 
   3.496866962381276*^9}, {3.496867010771649*^9, 3.496867022922418*^9}, {
   3.496867218081956*^9, 3.496867239842257*^9}, {3.496869939113587*^9, 
   3.4968699517063847`*^9}, {3.496870049546607*^9, 3.4968700498699102`*^9}, 
   3.4968700966112328`*^9, {3.4968705926914177`*^9, 3.496870597793062*^9}, {
   3.496875407732999*^9, 3.49687540828053*^9}, {3.496875543584099*^9, 
   3.4968755527021*^9}, {3.496875642923854*^9, 3.496875692281074*^9}, {
   3.496875726458839*^9, 3.496875729122164*^9}, {3.496875885742633*^9, 
   3.496875885899414*^9}, {3.496876322593164*^9, 3.496876323410861*^9}, {
   3.49688822575099*^9, 3.496888231230851*^9}, {3.496888935890915*^9, 
   3.496888975212942*^9}, {3.497064953849875*^9, 3.497064955956883*^9}, {
   3.497066465438505*^9, 3.4970664764266977`*^9}, {3.497067154503422*^9, 
   3.497067163749178*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"clojure", ".", "lang", ".", "Var"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject35636656337846273]], "Output",
 CellChangeTimes->{3.497195188410739*^9, 3.4971952207598133`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" tests", "Section",
 CellChangeTimes->{{3.495849492929494*^9, 3.495849499606658*^9}}],

Cell[CellGroupData[{

Cell["booleans, strings, numbers", "Subsection",
 CellChangeTimes->{{3.497063508808909*^9, 3.497063525184514*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"exprs", "=", 
   RowBox[{"{", 
    RowBox[{
    "Null", ",", "True", ",", "False", ",", "\"\<a\>\"", ",", "1", ",", "1.5",
      ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.497065009169997*^9, 3.497065013293743*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"ClojureEvaluate", "/@", "exprs"}]}]], "Input",
 CellChangeTimes->{{3.497063343376089*^9, 3.497063426606082*^9}, {
  3.497065007892119*^9, 3.497065023779089*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "True", ",", "False", ",", "\<\"a\"\>", ",", "1", ",", "1.5`", 
   ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.4970650149634438`*^9, 3.4970650240586567`*^9}, 
   3.4970656911218224`*^9, 3.497067168394759*^9, 3.4971952261320677`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "===", "exprs"}]], "Input",
 CellChangeTimes->{{3.497065025924863*^9, 3.497065028476509*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4970650287055187`*^9, 3.497195227269967*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["symbols, keywords", "Subsection",
 CellChangeTimes->{{3.497063528992176*^9, 3.4970635361679697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"quote", "[", "a", "]"}], ",", "\[EmptyVerySmallSquare]a"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.497063567058442*^9, 3.497063569592793*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "\[EmptyVerySmallSquare]a"}], "}"}]], "Output",
 CellChangeTimes->{3.497068182229748*^9, 3.49719522841332*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dash, Underscore, and Dot", "Subsection",
 CellChangeTimes->{{3.4970635371038933`*^9, 3.497063550247446*^9}, {
  3.497063601591793*^9, 3.497063613333516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"quote", "[", "contains\[Dash]dash", "]"}], ",", 
    RowBox[{"quote", "[", "contains\[LongDash]underscore", "]"}], ",", 
    RowBox[{"quote", "[", "contains\[FilledVerySmallSquare]dot", "]"}], ",", 
    RowBox[{"quote", "[", "contains\[EmptyVerySmallSquare]colon", "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.49706344457819*^9, 3.497063504938242*^9}, {
  3.4970635832912073`*^9, 3.497063642495228*^9}, {3.497063695293841*^9, 
  3.497063702589621*^9}, {3.49706375919339*^9, 3.4970637607093353`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "contains\[Dash]dash", ",", "contains\[LongDash]underscore", ",", 
   "contains\[FilledVerySmallSquare]dot", ",", 
   "contains\[EmptyVerySmallSquare]colon"}], "}"}]], "Output",
 CellChangeTimes->{{3.4970635963058157`*^9, 3.497063642830461*^9}, 
   3.497063703147666*^9, 3.497063773699247*^9, 3.497064038420739*^9, 
   3.497064373043428*^9, 3.497067191990733*^9, 3.497067537035221*^9, 
   3.4971952296048403`*^9, 3.497195277867078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"str", "@", 
     RowBox[{"quote", "[", "contains\[Dash]dash", "]"}]}], ",", 
    RowBox[{"str", "@", 
     RowBox[{"quote", "[", "contains\[LongDash]underscore", "]"}]}], ",", 
    RowBox[{"str", "@", 
     RowBox[{"quote", "[", "contains\[FilledVerySmallSquare]dot", "]"}]}], 
    ",", 
    RowBox[{"str", "@", 
     RowBox[{"quote", "[", "contains\[EmptyVerySmallSquare]colon", "]"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.497063654880066*^9, 3.4970636609929333`*^9}, {
  3.497063707191374*^9, 3.497063707374411*^9}, {3.497063770303769*^9, 
  3.497063772237143*^9}, {3.497064066876316*^9, 3.497064067033628*^9}, {
  3.497068235178424*^9, 3.497068246719262*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"contains-dash\"\>", ",", "\<\"contains_underscore\"\>", 
   ",", "\<\"contains.dot\"\>", 
   ",", "\<\"contains\[EmptyVerySmallSquare]colon\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.497195230321684*^9, 3.497195278085144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"quote", "@", 
     RowBox[{"ClojureSymbol", "[", "\"\<contains-dash\>\"", "]"}]}], ",", 
    RowBox[{"quote", "@", 
     RowBox[{"ClojureSymbol", "[", "\"\<contains_underscore\>\"", "]"}]}], 
    ",", 
    RowBox[{"quote", "@", 
     RowBox[{"ClojureSymbol", "[", "\"\<contains.dot\>\"", "]"}]}], ",", 
    RowBox[{"quote", "@", 
     RowBox[{"ClojureSymbol", "[", "\"\<contains:colon\>\"", "]"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.497063912018029*^9, 3.497063912487355*^9}, {
  3.497068230752651*^9, 3.497068230984305*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "contains\[Dash]dash", ",", "contains\[LongDash]underscore", ",", 
   "contains\[FilledVerySmallSquare]dot", ",", 
   "contains\[EmptyVerySmallSquare]colon"}], "}"}]], "Output",
 CellChangeTimes->{
  3.497064376732604*^9, 3.4970671730865803`*^9, 3.497067538914061*^9, {
   3.4970682313678207`*^9, 3.497068248459741*^9}, 3.4971952342198277`*^9, 
   3.497195278145981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"quote", "@", 
     RowBox[{"ClojureSymbol", "[", "\"\<contains*star\>\"", "]"}]}], ",", 
    RowBox[{"quote", "@", 
     RowBox[{"ClojureSymbol", "[", "\"\<contains&amp\>\"", "]"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.497067692161974*^9, 3.4970677086158113`*^9}, {
  3.497067815596793*^9, 3.497067820436611*^9}, {3.49706788842927*^9, 
  3.4970678979856253`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ClojureSymbol", "[", "\<\"contains*star\"\>", "]"}], ",", 
   RowBox[{"ClojureSymbol", "[", "\<\"contains&amp\"\>", "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.497067693244491*^9, 3.49706770922033*^9}, 
   3.497067820714127*^9, 3.497067934631939*^9, 3.497195234805591*^9, 
   3.497195278268763*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"quote", "[", "contains$dollar", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4970679109711437`*^9, 3.4970679177531157`*^9}}],

Cell[BoxData["contains$dollar"], "Output",
 CellChangeTimes->{3.4970679180821238`*^9, 3.49719523549183*^9, 
  3.497195278346056*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"apply", "[", 
   RowBox[{
    RowBox[{"ClojureSymbol", "[", "\"\<+\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.494041761392234*^9, 3.494041768086389*^9}, {
   3.494041825745388*^9, 3.4940418359644938`*^9}, 3.49686279698027*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.4940417684664516`*^9, 3.4940418363845997`*^9, 3.494041963924672*^9, 
   3.4940420053195868`*^9, 3.494042662391169*^9, 3.49566701023556*^9, {
   3.496862792920583*^9, 3.496862797308689*^9}, 3.496866046863391*^9, 
   3.497067990891985*^9, 3.497195236513631*^9, 3.497195278445999*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"quote", "@", 
   RowBox[{"apply", "[", 
    RowBox[{
     RowBox[{"ClojureSymbol", "[", "\"\<+\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.497068422851365*^9, 3.497068423768709*^9}}],

Cell[BoxData[
 RowBox[{"apply", "[", 
  RowBox[{"Plus", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.497068435611143*^9, 3.4971952370995398`*^9, 
  3.497195278530921*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "  operators that have Clojure equivalents"
}], "Subsection",
 CellChangeTimes->{{3.497192950866748*^9, 3.497192956567976*^9}, {
  3.497193468046998*^9, 3.497193493077882*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"quote", "[", 
     RowBox[{"a", "<", "b"}], "]"}], ",", 
    RowBox[{"quote", "[", 
     RowBox[{"a", "\[LessEqual]", "b"}], "]"}], ",", 
    RowBox[{"quote", "[", 
     RowBox[{"a", ">", "b"}], "]"}], ",", 
    RowBox[{"quote", "[", 
     RowBox[{"a", "\[GreaterEqual]", "b"}], "]"}], ",", 
    RowBox[{"quote", "[", 
     RowBox[{"a", "\[Equal]", "b"}], "]"}], ",", 
    RowBox[{"quote", "[", 
     RowBox[{"a", "!=", "b"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.497193289545712*^9, 3.4971933165458803`*^9}, {
  3.49719509877792*^9, 3.497195101530835*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "<", "b"}], ",", 
   RowBox[{"a", "\[LessEqual]", "b"}], ",", 
   RowBox[{"a", ">", "b"}], ",", 
   RowBox[{"a", "\[GreaterEqual]", "b"}], ",", 
   RowBox[{"a", "\[Equal]", "b"}], ",", 
   RowBox[{"a", "\[NotEqual]", "b"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.497193309393922*^9, 3.49719331699515*^9}, 
   3.4971947591119337`*^9, 3.497195102079735*^9, 3.497195285322863*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["lists and vectors", "Subsection",
 CellChangeTimes->{{3.4970641284856052`*^9, 3.497064131253276*^9}, {
  3.497064175668042*^9, 3.497064177779689*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"quote", "[", 
   RowBox[{"a", "[", 
    RowBox[{"b", "[", "c", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.497064197183419*^9, 3.49706419820483*^9}}],

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"b", "[", "c", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.497064383923794*^9, 3.497195285517426*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.497064562106535*^9, 3.497064568753314*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.49706456923829*^9, 3.49706460647129*^9, 
  3.4971952856098747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"let", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], 
    ",", 
    RowBox[{"a", "[", "0", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4970646434423027`*^9, 3.4970646461204157`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.4970646464504547`*^9, 3.497195285674322*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["scoping", "Subsection",
 CellChangeTimes->{{3.497064625445869*^9, 3.497064626477592*^9}, 
   3.497064684322068*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"let", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "1"}], "}"}], ",", "a"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4970646134649763`*^9, 3.497064634727455*^9}, 
   3.497064684322453*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4970646352304087`*^9, 3.497064684323947*^9, 
  3.497195285758924*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4970646352304087`*^9, 3.497064684323947*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["function call", "Subsection",
 CellChangeTimes->{{3.4958495361897163`*^9, 3.495849536997161*^9}, {
  3.495849747833679*^9, 3.495849749247205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"map", "[", 
   RowBox[{"count", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496281784654543*^9, 3.4962817922778788`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.496281792652567*^9, 3.4968627861745853`*^9, 
  3.496865993675205*^9, 3.497064695400619*^9, 3.497195285847232*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"reduce", "[", 
   RowBox[{"vector", ",", "1", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496282796037274*^9, 3.496282821243731*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", "3"}], "}"}], ",", "4"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.496282817894328*^9, 3.4962828215405293`*^9}, 
   3.496862786759459*^9, 3.496865995198772*^9, 3.49686697287914*^9, 
   3.497064696037383*^9, 3.497195285969137*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["hash\[Dash]map", "Subsection",
 CellChangeTimes->{{3.496866874091914*^9, 3.49686688714524*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"hash\[Dash]map", "[", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496866880500368*^9, 3.4968668913784647`*^9}}],

Cell[BoxData[
 RowBox[{"HashMap", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.496866891898528*^9, {3.4968669703243837`*^9, 3.496866991487515*^9}, 
   3.496867061122211*^9, 3.49686724631674*^9, 3.496867946155888*^9, 
   3.497064700823484*^9, 3.497195286031341*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"HashMap", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.496867950751225*^9}],

Cell[BoxData[
 RowBox[{"HashMap", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.496867951228743*^9, 3.497064701895384*^9, 
  3.497195286110227*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"hash\[Dash]map", "[", 
   RowBox[{
   "\[EmptyVerySmallSquare]key", " ", ",", "\[EmptyVerySmallSquare]value"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496869161929454*^9, 3.496869172939245*^9}}],

Cell[BoxData[
 RowBox[{"HashMap", "[", 
  RowBox[{"{", 
   RowBox[{
   "\[EmptyVerySmallSquare]key", ",", "\[EmptyVerySmallSquare]value"}], "}"}],
   "]"}]], "Output",
 CellChangeTimes->{{3.496869170574428*^9, 3.496869173204069*^9}, 
   3.49706470726888*^9, 3.4971952861944923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"\[EmptyVerySmallSquare]key", "[", 
   RowBox[{"hash\[Dash]map", "[", 
    RowBox[{
    "\[EmptyVerySmallSquare]key", " ", ",", "\[EmptyVerySmallSquare]value"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496869258471774*^9, 3.4968692601744957`*^9}}],

Cell[BoxData["\[EmptyVerySmallSquare]value"], "Output",
 CellChangeTimes->{3.496869260544408*^9, 3.4970647079460907`*^9, 
  3.497195286277791*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["hash\[Dash]set", "Subsection",
 CellChangeTimes->{{3.496867248966135*^9, 3.496867253179679*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"hash\[Dash]set", "[", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496867257871723*^9, 3.496867260596712*^9}}],

Cell[BoxData[
 RowBox[{"HashSet", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]], "Output",
 CellChangeTimes->{3.49686795364045*^9, 3.497064709884053*^9, 
  3.4971952937329273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"HashSet", "[", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496867274469514*^9, 3.4968672757895203`*^9}}],

Cell[BoxData[
 RowBox[{"HashSet", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]], "Output",
 CellChangeTimes->{3.496867927874626*^9, 3.4970647121742897`*^9, 
  3.497195293872662*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["division", "Subsection",
 CellChangeTimes->{{3.4968701320287533`*^9, 3.4968701326097813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"Division", "[", 
   RowBox[{"1", " ", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496870136846109*^9, 3.496870152796756*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.4968759032328176`*^9, 3.4968764284997787`*^9, 
  3.49706471421681*^9, 3.497195293931181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"Division", "[", 
   RowBox[{"1", " ", ",", "2.0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.49687643987784*^9, 3.496876440476059*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.496876440936619*^9, 3.497064715026635*^9, 
  3.497195293974578*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"Unevaluated", "[", 
   RowBox[{"1", "/", "2.0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496870171373323*^9, 3.496870171651783*^9}, {
  3.496871876402371*^9, 3.496871877138029*^9}, {3.496875822871015*^9, 
  3.496875826517323*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.496870243959003*^9, 3.496871353788344*^9, 
  3.496871877478739*^9, 3.496875826891317*^9, 3.496876419387689*^9, 
  3.497064715756763*^9, 3.497195294037299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"1", "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.496875835117527*^9, 3.4968758353407173`*^9}, {
   3.496875896362461*^9, 3.496875898145906*^9}, 3.4968764232872047`*^9}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.4968758983938427`*^9, 3.496875967969575*^9, 
  3.496876005086026*^9, 3.496876423575677*^9, 3.497064716459579*^9, 
  3.4971952940925207`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plus", "Subsection",
 CellChangeTimes->{{3.496876451650763*^9, 3.496876453280943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"def", "[", 
   RowBox[{"addto", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.497064740188983*^9, 3.497064751275235*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"clojure", ".", "lang", ".", "Var"}], "]"}], "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject5663411186696193]], "Output",
 CellChangeTimes->{3.497064755634892*^9, 3.4971952941688232`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"addto", "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.4970647629172153`*^9, 3.4970647640427933`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.497064764726815*^9, 3.497195294226459*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["method call", "Subsection",
 CellChangeTimes->{{3.496119225947154*^9, 3.496119227488706*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"\[FilledVerySmallSquare]toUpperCase", "[", "\"\<fred\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.496119228551059*^9, 3.496119232601151*^9}}],

Cell[BoxData["\<\"FRED\"\>"], "Output",
 CellChangeTimes->{
  3.4961192331036043`*^9, {3.4962816312818127`*^9, 3.4962816399199667`*^9}, 
   3.496283049291192*^9, 3.496862789723104*^9, 3.4968660401664343`*^9, 
   3.497064804654262*^9, 3.4971952942800417`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"\[FilledVerySmallSquare]\[FilledVerySmallSquare]", "[", 
   RowBox[{"System", ",", 
    RowBox[{"getProperties", "[", "]"}], ",", 
    RowBox[{"get", "[", "\"\<os.name\>\"", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4957303609375143`*^9, 3.495730392983533*^9}, {
  3.4962818533888493`*^9, 3.496281854643808*^9}}],

Cell[BoxData["\<\"Mac OS X\"\>"], "Output",
 CellChangeTimes->{3.49628185502345*^9, 3.496862790258402*^9, 
  3.496866041339921*^9, 3.497064802461422*^9, 3.497195294363524*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"\[FilledVerySmallSquare]", "[", 
   RowBox[{
    RowBox[{"\[FilledVerySmallSquare]", "[", 
     RowBox[{"System", ",", 
      RowBox[{"getProperties", "[", "]"}]}], "]"}], ",", 
    RowBox[{"get", "[", "\"\<os.name\>\"", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.495730397735643*^9, 3.495730427938363*^9}, {
  3.496281857581976*^9, 3.496281858811893*^9}}],

Cell[BoxData["\<\"Mac OS X\"\>"], "Output",
 CellChangeTimes->{3.496281859183509*^9, 3.496283064308078*^9, 
  3.496862790744339*^9, 3.496866042058364*^9, 3.4970648009707317`*^9, 
  3.497195294452325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"\[FilledVerySmallSquare]", "[", 
   RowBox[{"System", ",", 
    RowBox[{"getProperties", "[", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496877020502453*^9, 3.4968770394225388`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"java", ".", "util", ".", "Properties"}], "]"}], 
   "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject15481180694511617]], "Output",
 CellChangeTimes->{3.497064799617793*^9, 3.497195294536125*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["constructor", "Subsection",
 CellChangeTimes->{{3.49719529622639*^9, 3.4971952985999613`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{
  "java\[FilledVerySmallSquare]util\[FilledVerySmallSquare]HashMap\
\[FilledVerySmallSquare]", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496876937927039*^9, 3.4968769512537127`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"java", ".", "util", ".", "HashMap"}], "]"}], 
   "\[RightGuillemet]"}],
  JLink`Objects`vm4`JavaObject1]], "Output",
 CellChangeTimes->{3.497064876910779*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["notes for advanced interop..", "Subsection",
 CellChangeTimes->{{3.496887945815195*^9, 3.496887948580793*^9}, {
  3.4970680822418957`*^9, 3.49706810547256*^9}, {3.497195307097762*^9, 
  3.497195307903817*^9}}],

Cell["\<\
(into - array com.wolfram.jlink.Expr (map createExpr struct)))\
\>", "Text",
 CellChangeTimes->{3.49688808113962*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"gensym", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496888745948987*^9, 3.496888748908432*^9}}],

Cell[BoxData["G\[LongDash]\[LongDash]226"], "Output",
 CellChangeTimes->{3.497068054876905*^9, 3.497195304352293*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"object\[Dash]array", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "\"\<a\>\"", ",", 
     RowBox[{"(", 
      RowBox[{
      "java\[FilledVerySmallSquare]util\[FilledVerySmallSquare]HashMap\
\[FilledVerySmallSquare]", "[", "]"}], ")"}]}], "}"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.496888448448838*^9, 3.4968884503415947`*^9}, {
  3.496888555587112*^9, 3.496888583650667*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "\<\"a\"\>", ",", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", 
      RowBox[{"java", ".", "util", ".", "HashMap"}], "]"}], 
     "\[RightGuillemet]"}],
    JLink`Objects`vm2`JavaObject1]}], "}"}]], "Output",
 CellChangeTimes->{3.497068065162344*^9, 3.4970681180421343`*^9, 
  3.497195304587322*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"into\[Dash]array", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<a\>\"", ",", "\"\<b\>\""}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.496888411529415*^9, 3.496888413399832*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.496888413797812*^9, 3.49706812042404*^9, 
  3.497195304684873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"into\[Dash]array", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<a\>\"", ",", "\"\<b\>\""}], "}"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4970681253423977`*^9, 3.497195304747451*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"into\[Dash]array", "[", 
   RowBox[{
   "java\[FilledVerySmallSquare]lang\[FilledVerySmallSquare]Integer", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.496888083499227*^9, 3.496888110569529*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.49688824350428*^9, 3.4970681263292627`*^9, 
  3.4971953048276176`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MakeClojureExpression", "[", 
  RowBox[{"into\[Dash]array", "[", 
   RowBox[{
   "java\[FilledVerySmallSquare]lang\[FilledVerySmallSquare]Integer", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4968881536261377`*^9, 3.496888157199349*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{"clojure", ".", "lang", ".", "PersistentList"}], "]"}], 
   "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject30839816962703361]], "Output",
 CellChangeTimes->{3.496888157586493*^9, 3.497068128504616*^9, 
  3.497195304911631*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["bugs (may crash link)", "Section",
 CellChangeTimes->{{3.497195243691918*^9, 3.497195250737996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"Unevaluated", "@", 
   RowBox[{"quote", "@", 
    RowBox[{"Plus", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.497068465768692*^9, 3.4970685350608463`*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.497068467012848*^9, 3.497068482332088*^9}, {
  3.497068514964855*^9, 3.497068535521159*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{"quote", "@", 
   RowBox[{
    RowBox[{"ClojureSymbol", "[", "\"\<+\>\"", "]"}], "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.497068441459156*^9, 3.497068442927825*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.4970684433288383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClojureEvaluate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], "[", "0", 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.497064580037148*^9, 3.497064582889183*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.497064583297811*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1436, 856},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
InputAutoReplacements->{
 "--" -> "\[Dash]", "-=" -> "\[LongDash]", "''" -> "\[EmptyVerySmallSquare]", 
  "\\" -> "\[FilledVerySmallSquare]", "``" -> "ClojureEvaluate"},
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 166, 2, 76, "Title"],
Cell[736, 26, 92, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[853, 31, 91, 1, 67, "Section"],
Cell[947, 34, 96, 1, 34, "Subsection"],
Cell[1046, 37, 147, 2, 26, "Subsection"],
Cell[1196, 41, 167, 2, 26, "Subsection"],
Cell[1366, 45, 147, 2, 26, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1550, 52, 263, 3, 67, "Section"],
Cell[1816, 57, 651, 13, 27, "Input"],
Cell[CellGroupData[{
Cell[2492, 74, 228, 5, 27, "Input"],
Cell[2723, 81, 553, 13, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3313, 99, 108, 1, 34, "Subsection"],
Cell[3424, 102, 719, 16, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4180, 123, 103, 1, 34, "Subsection"],
Cell[4286, 126, 345, 9, 27, "Input"],
Cell[4634, 137, 399, 10, 27, "Input"],
Cell[5036, 149, 345, 9, 27, "Input"],
Cell[5384, 160, 573, 14, 27, "Input"],
Cell[5960, 176, 94, 1, 27, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6103, 183, 95, 1, 67, "Section"],
Cell[6201, 186, 100, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[6326, 191, 98, 2, 27, "Input",
 InitializationCell->True],
Cell[6427, 195, 96, 1, 27, "Output"]
}, Open  ]],
Cell[6538, 199, 215, 4, 27, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6778, 207, 662, 15, 73, "Input",
 InitializationCell->True],
Cell[7443, 224, 677, 11, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8157, 240, 351, 8, 27, "Input",
 InitializationCell->True],
Cell[8511, 250, 833, 19, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9393, 275, 143, 2, 67, "Section"],
Cell[9539, 279, 592, 13, 58, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[10156, 296, 645, 10, 27, "Input",
 InitializationCell->True],
Cell[10804, 308, 299, 6, 27, "Output"]
}, Open  ]],
Cell[11118, 317, 395, 8, 27, "Input",
 InitializationCell->True],
Cell[11516, 327, 300, 7, 27, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[11841, 338, 160, 3, 27, "Input"],
Cell[12004, 343, 251, 9, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12292, 357, 2450, 35, 358, "Input",
 InitializationCell->True],
Cell[14745, 394, 326, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15108, 406, 2194, 32, 238, "Input",
 InitializationCell->True],
Cell[17305, 440, 301, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17643, 451, 141, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[17809, 457, 388, 7, 27, "Input",
 InitializationCell->True],
Cell[18200, 466, 301, 6, 27, "Output"]
}, Open  ]],
Cell[18516, 475, 988, 26, 27, "Input",
 InitializationCell->True],
Cell[19507, 503, 467, 12, 27, "Input",
 InitializationCell->True],
Cell[19977, 517, 493, 10, 27, "Input",
 InitializationCell->True],
Cell[20473, 529, 220, 4, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20730, 538, 161, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[20916, 544, 3016, 43, 268, "Input",
 InitializationCell->True],
Cell[23935, 589, 327, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24299, 601, 3853, 55, 328, "Input",
 InitializationCell->True],
Cell[28155, 658, 302, 6, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28518, 671, 91, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[28634, 676, 114, 1, 34, "Subsection"],
Cell[28751, 679, 293, 8, 27, "Input"],
Cell[CellGroupData[{
Cell[29069, 691, 211, 4, 27, "Input"],
Cell[29283, 697, 317, 7, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29637, 709, 126, 2, 27, "Input"],
Cell[29766, 713, 97, 1, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29912, 720, 107, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[30044, 725, 238, 6, 27, "Input"],
Cell[30285, 733, 159, 3, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30493, 742, 164, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[30682, 748, 598, 11, 27, "Input"],
Cell[31283, 761, 477, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31797, 775, 764, 17, 27, "Input"],
Cell[32564, 794, 273, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32874, 804, 629, 15, 27, "Input"],
Cell[33506, 821, 412, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33955, 835, 465, 11, 27, "Input"],
Cell[34423, 848, 358, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34818, 861, 184, 3, 27, "Input"],
Cell[35005, 866, 132, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35174, 873, 364, 8, 27, "Input"],
Cell[35541, 883, 334, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35912, 893, 323, 8, 27, "Input"],
Cell[36238, 903, 225, 6, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36512, 915, 242, 6, 34, "Subsection"],
Cell[CellGroupData[{
Cell[36779, 925, 660, 17, 27, "Input"],
Cell[37442, 944, 436, 10, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37927, 960, 156, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[38108, 966, 224, 5, 27, "Input"],
Cell[38335, 973, 147, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38519, 981, 214, 5, 27, "Input"],
Cell[38736, 988, 192, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38965, 997, 363, 10, 27, "Input"],
Cell[39331, 1009, 94, 1, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39474, 1016, 121, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[39620, 1022, 267, 7, 27, "Input"],
Cell[39890, 1031, 169, 4, 27, "Output"],
Cell[40062, 1037, 144, 3, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40255, 1046, 152, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[40432, 1052, 337, 9, 27, "Input"],
Cell[40772, 1063, 208, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41017, 1072, 267, 6, 27, "Input"],
Cell[41287, 1080, 363, 10, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41699, 1096, 101, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[41825, 1101, 221, 4, 27, "Input"],
Cell[42049, 1107, 392, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42478, 1122, 270, 8, 27, "Input"],
Cell[42751, 1132, 271, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43059, 1145, 264, 6, 27, "Input"],
Cell[43326, 1153, 282, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43645, 1165, 323, 7, 27, "Input"],
Cell[43971, 1174, 146, 2, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44166, 1182, 102, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[44293, 1187, 219, 4, 27, "Input"],
Cell[44515, 1193, 194, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44746, 1202, 214, 4, 27, "Input"],
Cell[44963, 1208, 195, 4, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45207, 1218, 100, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[45332, 1223, 198, 4, 27, "Input"],
Cell[45533, 1229, 162, 3, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45732, 1237, 199, 4, 27, "Input"],
Cell[45934, 1243, 120, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46091, 1250, 296, 6, 27, "Input"],
Cell[46390, 1258, 211, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46638, 1266, 233, 4, 27, "Input"],
Cell[46874, 1272, 210, 4, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47133, 1282, 92, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[47250, 1287, 192, 4, 27, "Input"],
Cell[47445, 1293, 301, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47783, 1304, 165, 3, 27, "Input"],
Cell[47951, 1309, 92, 1, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48092, 1316, 99, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[48216, 1321, 210, 4, 27, "Input"],
Cell[48429, 1327, 258, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48724, 1336, 384, 7, 27, "Input"],
Cell[49111, 1345, 175, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49323, 1352, 427, 9, 27, "Input"],
Cell[49753, 1363, 203, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49993, 1371, 253, 5, 27, "Input"],
Cell[50249, 1378, 308, 7, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50606, 1391, 100, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[50731, 1396, 250, 5, 27, "Input"],
Cell[50984, 1403, 267, 7, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51300, 1416, 215, 3, 34, "Subsection"],
Cell[51518, 1421, 127, 3, 26, "Text"],
Cell[CellGroupData[{
Cell[51670, 1428, 162, 3, 27, "Input"],
Cell[51835, 1433, 117, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51989, 1439, 467, 11, 27, "Input"],
Cell[52459, 1452, 411, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52907, 1467, 242, 5, 27, "Input"],
Cell[53152, 1474, 177, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53366, 1483, 176, 4, 27, "Input"],
Cell[53545, 1489, 155, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53737, 1497, 341, 8, 27, "Input"],
Cell[54081, 1507, 185, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54303, 1516, 349, 8, 27, "Input"],
Cell[54655, 1526, 340, 8, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55056, 1541, 106, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[55187, 1546, 256, 6, 27, "Input"],
Cell[55446, 1554, 149, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55632, 1561, 265, 6, 27, "Input"],
Cell[55900, 1569, 78, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56015, 1575, 245, 6, 27, "Input"],
Cell[56263, 1583, 76, 1, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
